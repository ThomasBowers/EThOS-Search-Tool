Virtual Prototyping of Embedded Real-Time 
This thesis presents the ViPERS (Virtual Prototyping of Embedded Real-time Systems) virtual
prototyping methodology. The concepts, the implementation, and the experiments presented in
this thesis were developed at the University of Sussex (UoS) in the Centre for VLSI and
Computer Graphics and were part of an EU funded project.
ViPERS refers to a design methodology which links the graphical and interactive features of
virtual prototyping techniques with key design trends for SoCs. System level design is a widely
adopted approach to deal with the complexity, short time-to-market, and heterogeneous nature
of today's electronic systems. The integration of virtual prototyping with the SystemC design
methodology is proposed to deal with issues such as the modelling of the interfaces and the
exploration of user-machine interaction which are becoming of vital importance in embedded
handheld devices. An exploration of virtual prototyping and SOC design is illustrated in the
thesis to provide an understanding of the objectives of the ViPERS methodology. The ViPERS
approach is assisted by a framework which provides the necessary tools needed for the
implementation and simulation of virtual prototypes in the different phases of the suggested
design flow. After illustrating the ViPERS methodology and environment the focus of this
thesis will be on the links provided within the ViPERS framework to allow communication
between the graphical models and the underlying functional counterparts.
A key contribution includes the development of a design flow for SoCs, with special focus on
the communication infrastructure which enables the graphical and functional models to interact
at simulation time. Another contribution in this thesis is the illustrative case study where
interactive photorealistic models of electronic handheld devices are combined with their
respective functional models implemented in SystemC and UML. The case study presents the
design of an RF-based remote control for home automation.
